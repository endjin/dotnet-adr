on:
  workflow_call:
    inputs:
      jobShortName:
        description: The workflow job name
        required: true
        type: string
        default: 'build'
      displayName:
        description: The display name given to the step running the build script
        required: true
        type: string
        default: 'Run Build Script'
      netSdkVersion:
        description: The primary .NET SDK version required for the build process, as per the syntax required by the 'setup-dotnet' action.
        required: true
        type: string
        default: '6.0.x'
      additionalNetSdkVersion:
        description: An additional .NET SDK version required for the build process, as per the syntax required by the 'setup-dotnet' action.
        required: false
        type: string
      tasks:
        description: The tasks that need to be run as part of the build script, formatted as a comma-delimited string (e.g. 'FullBuild' or 'Build,Test').
        required: true
        type: string

jobs:
  build:
    name: ${{ inputs.jobShortName }}
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.run_build.outputs.SemVer }}
      major: ${{ steps.run_build.outputs.Major }}
      majorMinor: ${{ steps.run_build.outputs.Major }}.${{ steps.run_build.outputs.Minor }}
      preReleaseTag: ${{ steps.run_build.outputs.PreReleaseTag }}

    steps:
    - uses: actions/setup-dotnet@v3
      name: Install .NET Core SDK ${{ inputs.netSdkVersion }}
      with:
        dotnet-version: '${{ inputs.netSdkVersion }}'
    
    - uses: actions/setup-dotnet@v3
      if: ${{ inputs.additionalNetSdkVersion }}
      name: Install .NET Core SDK ${{ inputs.additionalNetSdkVersion }}
      with:
        dotnet-version: '${{ inputs.additionalNetSdkVersion }}'
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Restore Compilation Outputs
      id: cache_compile_outputs_restore
      uses: actions/cache/restore@v3
      with:
        path: |
          ${{ github.workspace }}/.nuget-packages
          ${{ github.workspace }}/Solutions
        key: compile-outputs-${{ github.sha }}

    - id: cache_debug
      run: |
        echo "CacheHit: '${{ steps.cache_compile_outputs_restore.outputs.cache-hit }}'"
   
    - id: run_script
      name: ${{ inputs.displayName }}
      run: |
        $tasks = "${{ inputs.tasks }}" -split ","
        ./build.ps1 -Tasks $tasks
      shell: pwsh
      env:
        NUGET_PACKAGES: ${{ github.workspace }}/.nuget-packages

    - name: Cache Compilation Outputs
      id: cache_compile_outputs_save
      if: steps.cache_compile_outputs_restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: |
          ${{ github.workspace }}/.nuget-packages
          ${{ github.workspace }}/Solutions
        key: compile-outputs-${{ github.sha }}
